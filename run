#!/bin/bash

PP=$(dirname $0)
[ -f $PP/conf.ini ] || $PP/config
[ -f $PP/conf.ini ] || exit -1
. $PP/conf.ini	
. $PP/lib.bash

MODEL=$1
shift
CASE=$1
shift
TASKS=$1
shift

if [ -z "$MODEL" ] || [ -z "$CASE" ]
then
	echo Usage: ./run MODEL CASE.xml [cores]
	exit -1
fi

if [ ! -f "$CASE" ]
then
	echo No case file: $CASE
	exit -1
fi

SOLVER=$TCLB/CLB/$MODEL/main

if [ ! -f "$SOLVER" ]
then
	echo No such model: $MODEL
	echo File not found: $SOLVER
	exit -1
fi


if [ -z "$TASKS" ]
then
	TASKS=1
fi

if [ $TASKS -gt $MAX_TASKS_PER_NODE ]
then
	TASKS_PER_NODE=$MAX_TASKS_PER_NODE
	NODES=$[$TASKS/$TASKS_PER_NODE]
	CORES_PER_TASK=$CORES_PER_TASK_FULL
else
	TASKS_PER_NODE=$TASKS
	NODES=1
	CORES_PER_TASK=1
fi

# REMAINDER=$[($NODES*$TASKS_PER_NODE)%$TASKS]
if [ $TASKS -ne $[$NODES*$TASKS_PER_NODE] ]
then
	echo Requested number of cores/gpus \($TASKS\) is not $NODES x $TASKS_PER_NODE
	exit -1
fi

CORES=$[$NODES*$TASKS_PER_NODE*$CORES_PER_TASK]

echo -e "Trying to run $CASE with $MODEL model on $TASKS (mpi)processes/gpus. Job details:
	CORES=NODESxTASKS_PER_NODExCORES_PER_TASK: $CORES = $NODES x $TASKS_PER_NODE x $CORES_PER_TASK"

NAME=CLB:$CASE

if test "$RUN_GPU" == "y"
then
	GPU_HEADER="#SBATCH --gres=gpu:$TASKS_PER_NODE"
fi

if [ ! -z "$MEMORY_PER_CORE" ]
then
	MEM_PER_CORE_HEADER="#SBATCH --mem-per-cpu=${MEMORY_PER_CORE}gb"
	TOTAL_CPU_MEMORY=$[$MEMORY_PER_CORE*$CORES]
	echo -e	"	TOTAL_CPU_MEMORY=MEMORY_PER_CORExCORES: ${TOTAL_CPU_MEMORY}gb = ${MEMORY_PER_CORE}gb x $CORES"
else
    echo -e	"	MEMORY_PER_CORE is not declared, default value will be used."
fi

sbatch $(arg --account $GRANT) $(arg --partition $MAIN_PARTITION) $(arg --qos $MAIN_QOS) "$@" <<EOF
#!/bin/bash -l
#SBATCH --job-name=$NAME
#SBATCH --nodes=$NODES 
#SBATCH --ntasks=$TASKS
#SBATCH --cpus-per-task=$CORES_PER_TASK
#SBATCH --ntasks-per-node=$TASKS_PER_NODE
#SBATCH --time=01:00:00 
$MEM_PER_CORE_HEADER
$GPU_HEADER

ulimit -l unlimited

    cd \$SLURM_SUBMIT_DIR 
echo "###### Nodes:          #######"
    srun hostname
echo "###### Loading modules #######"
	source $PP/conf.ini
	mod_add=false
	source $PP/mods.ini RUN
echo "###### --------------- #######"
	echo -e "Executing command:\n$RUN_COMMAND $SINGULARITY_COMMAND $SOLVER $CASE\n"
echo "###### --------------- #######"	
echo ""
	trap "say Errored" ERR
	trap "say Terminated" TERM
	trap "say Killed" KILL
	set -e
	say Started
	$RUN_COMMAND $SINGULARITY_COMMAND $SOLVER $CASE
	say Finished
EOF
